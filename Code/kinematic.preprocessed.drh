


























































[0,2] tau;
[6,12] v;
[-1,100] sx;
[-20,20] sy;
[0, 2] time;
[-2,2.07] Psi_d;
[-1,100] sx_d;
[-20,20] sy_d;
[0,35] waypointx;
[-10,10] waypointy;
[0,10] simtime;
[0,2] schedtime;
[0,100] sx_0; 
[-20,20] sy_0; 


[-2,2.06] kappa_d_spline;
[-2,2.07] Psi_d_spline;
[-1,100] sx_d_spline;
[-20,20] sy_d_spline;
[-2,2.08] Psi_dot_d_spline;
[0,10] lookahead;





{
    mode 1;

    invt:

    flow:

    
    
    
    d/dt[tau]=1;
    
    d/dt[schedtime]=1;
    
    d/dt[simtime]=0;
    
    d/dt[v]=1.0*(cos(Psi_d)*(sx_d - sx) + sin(Psi_d)*(sy_d - sy)) +10.0*(11.11 -v); 
    
    d/dt[sx]=v*cos(Psi_d); 
    
    d/dt[sy]=v*sin(Psi_d); 

    
    d/dt[Psi_d] = -11.11/r;
    d/dt[sx_d] = 11.11*cos(Psi_d);
    d/dt[sy_d] = 11.11*sin(Psi_d);

    
    d/dt[kappa_d_spline] = 0;
    d/dt[Psi_d_spline] = 0;
    d/dt[sx_d_spline] = 0;
    d/dt[sy_d_spline] = 0;
    d/dt[Psi_dot_d_spline] = 0;

    
    d/dt[waypointx]= 0;
    d/dt[waypointy]= 0;
    d/dt[lookahead]= 0;
    d/dt[sx_0] = 0;
    d/dt[sy_0] = 0; 

    jump:
        (and (schedtime = 0.1)) ==> @2
            (and 
             (tau' = tau)
             (v' = v)
             (sx' = sx)
             (sy' = sy)
             (Psi_d' = Psi_d)
             (sx_d' = sx_d)
             (sy_d' = sy_d)
             (waypointx' = waypointx) 
             (waypointy' = waypointy) 
             (simtime' = simtime)
             (schedtime'= 0)
             (lookahead' = tau+0.2)
             (kappa_d_spline' = kappa_d_spline)
             (Psi_d_spline' = Psi_d_spline)
             (sx_d_spline' = sx_d_spline)
             (sy_d_spline' = sy_d_spline)
             (Psi_dot_d_spline' = Psi_dot_d_spline)
             (sx_0' = sx_0)
             (sy_0' = sy_0));

            
}


{
    mode 2;

    invt:

    
    (v>=0);

    flow:

    
    
    

    
    d/dt[tau]= 0;
    d/dt[schedtime]= 0;
    
    d/dt[v]= 0; 
    
    d/dt[sx]= 0; 
    
    d/dt[sy]= 0; 
    
    d/dt[Psi_d]= 0;
    d/dt[sx_d]= 0;
    d/dt[sy_d]= 0;


    
    d/dt[simtime]= 1;
    d/dt[kappa_d_spline]= (-0.50)*(-2*0.000000 + 11*0.000000 - 18*0.006046 + 9*(-0.000322))/33.831636*11.11 + 2*(4.50)*(-0.000000 + 2*0.000000 - 5*0.006046 +4*(-0.000322))/(33.831636*33.831636)*11.11*11.11*simtime + 3*(-4.50)*(-0.000000 + 0.000000 - 3*0.006046 + 3*(-0.000322))/(33.831636*33.831636*33.831636)*11.11*11.11*11.11*simtime*simtime ;
    d/dt[Psi_d_spline]= 11.11*kappa_d_spline;
    d/dt[sx_d_spline]= 11.11*cos(Psi_d_spline);
    d/dt[sy_d_spline] = 11.11*sin(Psi_d_spline);
    d/dt[Psi_dot_d_spline]= 11.11*((-0.50)*(-2*0.000000 + 11*0.000000 - 18*0.006046 + 9*(-0.000322))/33.831636*11.11 + 2*(4.50)*(-0.000000 + 2*0.000000 - 5*0.006046 +4*(-0.000322))/(33.831636*33.831636)*11.11*11.11*simtime + 3*(-4.50)*(-0.000000 + 0.000000 - 3*0.006046 + 3*(-0.000322))/(33.831636*33.831636*33.831636)*11.11*11.11*11.11*simtime*simtime);

    
    d/dt[waypointx]= 0;
    d/dt[waypointy]= 0;
    d/dt[lookahead]= 0;
    d/dt[sx_0] = 0;
    d/dt[sy_0] = 0; 

    jump:
    (and (simtime = lookahead)) ==> @1
        (and 
             (tau' = tau)
             (v' = v)
             (sx' = sx)
             (sy' = sy)
             (Psi_d' = Psi_d)
             (sx_d' = sx_d)
             (sy_d' = sy_d)
             (waypointx' = sx_d_spline) 
             (waypointy' = sy_d_spline) 
             (simtime' = 0)
             (schedtime'= schedtime)
             (lookahead' = lookahead)
             (kappa_d_spline' = 0)
             (Psi_d_spline' = 0)
             (sx_d_spline'= 0)
             (sy_d_spline' = 0)
             (Psi_dot_d_spline' = 0)
             (sx_0' = sx)
             (sy_0' = sy));

            
}


init: 
@2 (and 
    (tau=0) 
    (v=10.9) 
    (sx=0) 
    (sy=0) 
    (sx_0=sx)
    (sy_0=sy)
    (Psi_d=0) 
    (sx_d=0) 
    (sy_d=0) 
    (waypointx=0) 
    (waypointy=0) 
    (lookahead= 0.2)
    (simtime = 0) 
    (schedtime = 0)
    (kappa_d_spline= 0)
    (Psi_d_spline =0)
    (sx_d_spline= 0) 
    (sy_d_spline=0)
    (Psi_dot_d_spline=0));

goal:
@1 (tau>0.3);

