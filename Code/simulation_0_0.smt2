(set-logic QF_NRA_ODE)
(declare-fun waypointy () Real)
(declare-fun waypointx () Real)
(declare-fun v () Real)
(declare-fun tau () Real)
(declare-fun sy_d_spline () Real)
(declare-fun sy_d () Real)
(declare-fun sy () Real)
(declare-fun sx_d_spline () Real)
(declare-fun sx_d () Real)
(declare-fun sx () Real)
(declare-fun simtime () Real)
(declare-fun lookahead () Real)
(declare-fun kappa_d_spline () Real)
(declare-fun delta () Real)
(declare-fun Psi_dot_d_spline () Real)
(declare-fun Psi_dot_d () Real)
(declare-fun Psi_dot () Real)
(declare-fun Psi_d_spline () Real)
(declare-fun Psi_d () Real)
(declare-fun Psi () Real)
(declare-fun Beta () Real)
(declare-fun waypointy_0_0 () Real)
(declare-fun waypointy_0_t () Real)
(declare-fun waypointx_0_0 () Real)
(declare-fun waypointx_0_t () Real)
(declare-fun v_0_0 () Real)
(declare-fun v_0_t () Real)
(declare-fun tau_0_0 () Real)
(declare-fun tau_0_t () Real)
(declare-fun sy_d_spline_0_0 () Real)
(declare-fun sy_d_spline_0_t () Real)
(declare-fun sy_d_0_0 () Real)
(declare-fun sy_d_0_t () Real)
(declare-fun sy_0_0 () Real)
(declare-fun sy_0_t () Real)
(declare-fun sx_d_spline_0_0 () Real)
(declare-fun sx_d_spline_0_t () Real)
(declare-fun sx_d_0_0 () Real)
(declare-fun sx_d_0_t () Real)
(declare-fun sx_0_0 () Real)
(declare-fun sx_0_t () Real)
(declare-fun simtime_0_0 () Real)
(declare-fun simtime_0_t () Real)
(declare-fun lookahead_0_0 () Real)
(declare-fun lookahead_0_t () Real)
(declare-fun kappa_d_spline_0_0 () Real)
(declare-fun kappa_d_spline_0_t () Real)
(declare-fun delta_0_0 () Real)
(declare-fun delta_0_t () Real)
(declare-fun Psi_dot_d_spline_0_0 () Real)
(declare-fun Psi_dot_d_spline_0_t () Real)
(declare-fun Psi_dot_d_0_0 () Real)
(declare-fun Psi_dot_d_0_t () Real)
(declare-fun Psi_dot_0_0 () Real)
(declare-fun Psi_dot_0_t () Real)
(declare-fun Psi_d_spline_0_0 () Real)
(declare-fun Psi_d_spline_0_t () Real)
(declare-fun Psi_d_0_0 () Real)
(declare-fun Psi_d_0_t () Real)
(declare-fun Psi_0_0 () Real)
(declare-fun Psi_0_t () Real)
(declare-fun Beta_0_0 () Real)
(declare-fun Beta_0_t () Real)
(declare-fun time_0 () Real)
(declare-fun mode_0 () Real)
(define-ode flow_1 ((= d/dt[Beta] (- (+ (* (- (/ (- (* 108000 1.515) (* 108000 1.292)) (* (* 2273 v) v)) 1) Psi_dot) (/ (* 108000 delta) (* 2273 v))) (/ (* (+ 108000 108000) Beta) (* 2273 v)))) (= d/dt[Psi] Psi_dot) (= d/dt[Psi_d] (/ -11.11 (* (* 2 3.14159) (/ (* (^ (+ (* (- waypointx sx) (- waypointx sx)) (* (- waypointy sy) (- waypointy sy))) 0.5) (^ (+ (* (- waypointx sx) (- waypointx sx)) (* (- waypointy sy) (- waypointy sy))) 0.5)) (* 2 (- waypointx sx)))))) (= d/dt[Psi_d_spline] 0) (= d/dt[Psi_dot] (+ (- (/ (* (- (* 108000 1.515) (* 108000 1.292)) Beta) 4423) (* (/ (+ (* (* 1.292 1.292) 108000) (* (* 1.515 1.515) 108000)) 4423) (/ Psi_dot v))) (/ (* (* 1.292 108000) delta) 4423))) (= d/dt[Psi_dot_d] 0) (= d/dt[Psi_dot_d_spline] 0) (= d/dt[delta] (- (+ (+ (* 2 (- (* (cos Psi_d) (- sy_d sy)) (* (sin Psi_d) (- sx_d sx)))) (* 12 (- Psi_d Psi))) (* 4 (- Psi_dot_d Psi_dot))) (* 2 delta))) (= d/dt[kappa_d_spline] 0) (= d/dt[lookahead] 0) (= d/dt[simtime] 1) (= d/dt[sx] (* v (cos (+ Beta Psi)))) (= d/dt[sx_d] (* 11.11 (cos Psi_d))) (= d/dt[sx_d_spline] 0) (= d/dt[sy] (* v (sin (+ Beta Psi)))) (= d/dt[sy_d] (* 11.11 (sin Psi_d))) (= d/dt[sy_d_spline] 0) (= d/dt[tau] 1) (= d/dt[v] (+ (* 1 (+ (* (cos Psi_d) (- sx_d sx)) (* (sin Psi_d) (- sy_d sy)))) (* 10 (- 11.11 v)))) (= d/dt[waypointx] 0) (= d/dt[waypointy] 0)))
(define-ode flow_2 ((= d/dt[Beta] 0) (= d/dt[Psi] 0) (= d/dt[Psi_d] 0) (= d/dt[Psi_d_spline] (* 11.11 kappa_d_spline)) (= d/dt[Psi_dot] 0) (= d/dt[Psi_dot_d] 0) (= d/dt[Psi_dot_d_spline] (* 11.11 (+ (* (* (* 2 (/ (* 4.5 (+ (- (+ 0 (* 2 0)) (* 5 0.006046)) (* 4 -0.000322))) (* 33.8316 33.8316))) 11.11) 11.11) (* (* (* (* (* 6 (/ (* -4.5 (+ (- (+ 0 0) (* 3 0.006046)) (* 3 -0.000322))) (* (* 33.8316 33.8316) 33.8316))) 11.11) 11.11) 11.11) simtime)))) (= d/dt[delta] 0) (= d/dt[kappa_d_spline] (+ (+ (* (/ (* -0.5 (+ (- (+ (* -2 0) (* 11 0)) (* 18 0.006046)) (* 9 -0.000322))) 33.8316) 11.11) (* (* (* (* 2 (/ (* 4.5 (+ (- (+ 0 (* 2 0)) (* 5 0.006046)) (* 4 -0.000322))) (* 33.8316 33.8316))) 11.11) 11.11) simtime)) (* (* (* (* (* (* 3 (/ (* -4.5 (+ (- (+ 0 0) (* 3 0.006046)) (* 3 -0.000322))) (* (* 33.8316 33.8316) 33.8316))) 11.11) 11.11) 11.11) simtime) simtime))) (= d/dt[lookahead] 0) (= d/dt[simtime] 1) (= d/dt[sx] 0) (= d/dt[sx_d] 0) (= d/dt[sx_d_spline] (* 11.11 (cos Psi_d_spline))) (= d/dt[sy] 0) (= d/dt[sy_d] 0) (= d/dt[sy_d_spline] (* 11.11 (sin Psi_d_spline))) (= d/dt[tau] 0) (= d/dt[v] 0) (= d/dt[waypointx] 0) (= d/dt[waypointy] 0)))
(assert (<= -20 waypointy_0_0))
(assert (<= waypointy_0_0 200))
(assert (<= -20 waypointy_0_t))
(assert (<= waypointy_0_t 200))
(assert (<= -20 waypointx_0_0))
(assert (<= waypointx_0_0 200))
(assert (<= -20 waypointx_0_t))
(assert (<= waypointx_0_t 200))
(assert (<= 6 v_0_0))
(assert (<= v_0_0 12))
(assert (<= 6 v_0_t))
(assert (<= v_0_t 12))
(assert (<= 0 tau_0_0))
(assert (<= tau_0_0 2))
(assert (<= 0 tau_0_t))
(assert (<= tau_0_t 2))
(assert (<= 0 sy_d_spline_0_0))
(assert (<= sy_d_spline_0_0 10))
(assert (<= 0 sy_d_spline_0_t))
(assert (<= sy_d_spline_0_t 10))
(assert (<= -10 sy_d_0_0))
(assert (<= sy_d_0_0 100))
(assert (<= -10 sy_d_0_t))
(assert (<= sy_d_0_t 100))
(assert (<= -10 sy_0_0))
(assert (<= sy_0_0 100))
(assert (<= -10 sy_0_t))
(assert (<= sy_0_t 100))
(assert (<= 0 sx_d_spline_0_0))
(assert (<= sx_d_spline_0_0 50))
(assert (<= 0 sx_d_spline_0_t))
(assert (<= sx_d_spline_0_t 50))
(assert (<= -10 sx_d_0_0))
(assert (<= sx_d_0_0 100))
(assert (<= -10 sx_d_0_t))
(assert (<= sx_d_0_t 100))
(assert (<= -10 sx_0_0))
(assert (<= sx_0_0 100))
(assert (<= -10 sx_0_t))
(assert (<= sx_0_t 100))
(assert (<= 0 simtime_0_0))
(assert (<= simtime_0_0 1))
(assert (<= 0 simtime_0_t))
(assert (<= simtime_0_t 1))
(assert (<= 0 lookahead_0_0))
(assert (<= lookahead_0_0 2))
(assert (<= 0 lookahead_0_t))
(assert (<= lookahead_0_t 2))
(assert (<= -2 kappa_d_spline_0_0))
(assert (<= kappa_d_spline_0_0 2.06))
(assert (<= -2 kappa_d_spline_0_t))
(assert (<= kappa_d_spline_0_t 2.06))
(assert (<= -2 delta_0_0))
(assert (<= delta_0_0 2.04))
(assert (<= -2 delta_0_t))
(assert (<= delta_0_t 2.04))
(assert (<= -2 Psi_dot_d_spline_0_0))
(assert (<= Psi_dot_d_spline_0_0 2.08))
(assert (<= -2 Psi_dot_d_spline_0_t))
(assert (<= Psi_dot_d_spline_0_t 2.08))
(assert (<= -2 Psi_dot_d_0_0))
(assert (<= Psi_dot_d_0_0 2.08))
(assert (<= -2 Psi_dot_d_0_t))
(assert (<= Psi_dot_d_0_t 2.08))
(assert (<= -2 Psi_dot_0_0))
(assert (<= Psi_dot_0_0 2.05))
(assert (<= -2 Psi_dot_0_t))
(assert (<= Psi_dot_0_t 2.05))
(assert (<= -2 Psi_d_spline_0_0))
(assert (<= Psi_d_spline_0_0 2.07))
(assert (<= -2 Psi_d_spline_0_t))
(assert (<= Psi_d_spline_0_t 2.07))
(assert (<= -2 Psi_d_0_0))
(assert (<= Psi_d_0_0 2.07))
(assert (<= -2 Psi_d_0_t))
(assert (<= Psi_d_0_t 2.07))
(assert (<= -2 Psi_0_0))
(assert (<= Psi_0_0 2.04))
(assert (<= -2 Psi_0_t))
(assert (<= Psi_0_t 2.04))
(assert (<= -2 Beta_0_0))
(assert (<= Beta_0_0 2.03))
(assert (<= -2 Beta_0_t))
(assert (<= Beta_0_t 2.03))
(assert (<= 0 time_0 [0.000000]))
(assert (<= time_0 3.1 [0.000000]))
(assert (<= 1 mode_0))
(assert (<= mode_0 2))
(assert (and (and (= Psi_dot_d_spline_0_0 0) (= sy_d_spline_0_0 0) (= sx_d_spline_0_0 0) (= Psi_d_spline_0_0 0) (= kappa_d_spline_0_0 0) (= lookahead_0_0 0.2) (= simtime_0_0 0) (= waypointy_0_0 8) (= waypointx_0_0 2) (= Psi_dot_d_0_0 0) (= Psi_d_0_0 0) (= tau_0_0 0) (= delta_0_0 0) (= Beta_0_0 0) (= Psi_dot_0_0 0) (= Psi_0_0 0) (= sy_d_0_0 0) (= sx_d_0_0 0) (= v_0_0 10.9) (= sy_0_0 0) (= sx_0_0 0)) (= mode_0 1) (= waypointy_0_t (+ waypointy_0_0 (* 0 time_0))) (= waypointx_0_t (+ waypointx_0_0 (* 0 time_0))) (= tau_0_t (+ tau_0_0 (* 1 time_0))) (= sy_d_spline_0_t (+ sy_d_spline_0_0 (* 0 time_0))) (= sx_d_spline_0_t (+ sx_d_spline_0_0 (* 0 time_0))) (= simtime_0_t (+ simtime_0_0 (* 1 time_0))) (= lookahead_0_t (+ lookahead_0_0 (* 0 time_0))) (= kappa_d_spline_0_t (+ kappa_d_spline_0_0 (* 0 time_0))) (= Psi_dot_d_spline_0_t (+ Psi_dot_d_spline_0_0 (* 0 time_0))) (= Psi_dot_d_0_t (+ Psi_dot_d_0_0 (* 0 time_0))) (= Psi_d_spline_0_t (+ Psi_d_spline_0_0 (* 0 time_0))) (= [Beta_0_t Psi_0_t Psi_d_0_t Psi_d_spline_0_t Psi_dot_0_t Psi_dot_d_0_t Psi_dot_d_spline_0_t delta_0_t kappa_d_spline_0_t lookahead_0_t simtime_0_t sx_0_t sx_d_0_t sx_d_spline_0_t sy_0_t sy_d_0_t sy_d_spline_0_t tau_0_t v_0_t waypointx_0_t waypointy_0_t] (integral 0. time_0 [Beta_0_0 Psi_0_0 Psi_d_0_0 Psi_d_spline_0_0 Psi_dot_0_0 Psi_dot_d_0_0 Psi_dot_d_spline_0_0 delta_0_0 kappa_d_spline_0_0 lookahead_0_0 simtime_0_0 sx_0_0 sx_d_0_0 sx_d_spline_0_0 sy_0_0 sy_d_0_0 sy_d_spline_0_0 tau_0_0 v_0_0 waypointx_0_0 waypointy_0_0] flow_1)) (= mode_0 1) (forall_t 1 [0 time_0] (>= v_0_t 0)) (>= v_0_t 0) (>= v_0_0 0) (= mode_0 1) (> tau_0_t 0.05)))
(check-sat)
(exit)
